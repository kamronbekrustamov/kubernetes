apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-statefulset
  namespace: {{ .Values.namespace}}
spec:
  replicas: {{ .Values.postgresql.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      name: postgresql
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15.2-alpine
          ports:
            - containerPort: {{ .Values.postgresql.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: datasource-secrets
                  key: DATASOURCE_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: datasource-secrets
                  key: DATASOURCE_PASSWORD
            - name: POSTGRES_MULTIPLE_DATABASES
              value: users,posts
          volumeMounts:
            - name: config
              mountPath: /docker-entrypoint-initdb.d/create_dbs.sh
              subPath: create_dbs.sh
            - name: postgresql-pv-storage
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command: ["sh", "-c", "psql -U $POSTGRES_USER -d users -c SELECT 1"]
            failureThreshold: 2
            periodSeconds: 10
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command: ["sh", "-c", "psql -U $POSTGRES_USER -d users -c SELECT 1"]
            failureThreshold: 2
            periodSeconds: 10
            timeoutSeconds: 3
          startupProbe:
            exec:
              command: ["sh", "-c", "psql -U $POSTGRES_USER -d users -c SELECT 1"]
            initialDelaySeconds: 10
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 3
      volumes:
        - name: config
          configMap:
            name: config
            defaultMode: 0777
            items:
              - key: create_dbs.sh
                path: create_dbs.sh
        - name: postgresql-pv-storage
          persistentVolumeClaim:
            claimName: postgresql-pv-claim